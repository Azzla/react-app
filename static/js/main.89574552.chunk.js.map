{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","columns","rows","j","push","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calcWinner","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"0MAKA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,Q,IAMPC,E,2KACSC,GAAI,IAAD,OACd,OACE,cAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAQtC,IAFA,IAAMG,EAAU,GAEPH,EAAE,EAAGA,EAAE,EAAGA,IAAK,CAGtB,IAFA,IAAMI,EAAO,GAEJC,EAAE,EAAGA,EAAE,EAAGA,IACjBD,EAAKE,KAAKL,KAAKM,aAAaF,EAAO,EAAFL,IAGnCG,EAAQG,KAAK,qBAAKV,UAAU,YAAf,SAA4BQ,KAE3C,OACE,8BACGD,Q,GAxBWK,IAAMC,WA+BpBC,E,kDACJ,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IACDgB,MAAQ,CACXC,QAAS,CAAC,CACRV,QAASW,MAAM,GAAGC,KAAK,QAEzBC,WAAY,EACZC,SAAS,GAPM,E,wDAWPhB,GACV,IAAMY,EAAUX,KAAKU,MAAMC,QAAQK,MAAM,EAAGhB,KAAKU,MAAMI,WAAa,GAE9Db,EADUU,EAAQA,EAAQM,OAAS,GACjBhB,QAAQe,QAE5BE,EAAWjB,IAAYA,EAAQF,KAGnCE,EAAQF,GAAKC,KAAKU,MAAMK,QAAU,IAAM,IACxCf,KAAKmB,SAAS,CACZR,QAASA,EAAQS,OAAO,CAAC,CACvBnB,QAASA,KAEXa,WAAYH,EAAQM,OACpBF,SAAUf,KAAKU,MAAMK,a,6BAIlBM,GACLrB,KAAKmB,SAAS,CACZL,WAAYO,EACZN,QAAUM,EAAO,IAAO,M,+BAIlB,IAiBJC,EAjBG,OACDX,EAAUX,KAAKU,MAAMC,QACrBY,EAAUZ,EAAQX,KAAKU,MAAMI,YAC7BU,EAASN,EAAWK,EAAQtB,SAE5BwB,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EACX,gBAAkBA,EAClB,mBACF,OACE,6BACE,wBAAQ/B,QAAS,kBAAM,EAAKiC,OAAOF,IAAnC,SAA2CC,KADpCD,MAeb,OANEL,EADEE,EACO,WAAaA,EAGb,iBAAmBxB,KAAKU,MAAMK,QAAU,IAAM,KAIvD,sBAAKpB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACEG,QAAWsB,EAAQtB,QACnBL,QAAW,SAACG,GAAD,OAAO,EAAK+B,YAAY/B,QAGvC,sBAAKJ,UAAU,YAAf,UACE,8BAAM2B,IACN,6BAAKG,c,GAxEIlB,IAAMC,WAuFzB,SAASU,EAAWjB,GAYlB,IAXA,IAAM8B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGAhC,EAAI,EAAGA,EAAIgC,EAAMd,OAAQlB,IAAK,CAAC,IAAD,cACnBgC,EAAMhC,GADa,GAC9BiC,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIjC,EAAQ+B,IAAM/B,EAAQ+B,KAAO/B,EAAQgC,IAAMhC,EAAQ+B,KAAO/B,EAAQiC,GACpE,OAAOjC,EAAQ+B,GAGnB,OAAO,KAxBTG,IAASC,OACP,cAAC3B,EAAD,IACA4B,SAASC,eAAe,W","file":"static/js/main.89574552.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n//Square Component\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\n//Board Component\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const columns = [];\r\n    //Loop three times for columns\r\n    for (let i=0; i<3; i++) {\r\n      const rows = [];\r\n      //Loop three times inside each column\r\n      for (let j=0; j<3; j++) {\r\n        rows.push(this.renderSquare(j + (i*3)));\r\n      }\r\n      //Push the three rows to our column array\r\n      columns.push(<div className=\"board-row\">{rows}</div>);\r\n    }\r\n    return (\r\n      <div>\r\n        {columns}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Game Component\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n    };\r\n  }\r\n  \r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    \r\n    if (calcWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n  \r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calcWinner(current.squares);\r\n    \r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Got to move #' + move :\r\n        'go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n    \r\n    \r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    }\r\n    else {\r\n      status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n    \r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares = {current.squares}\r\n            onClick = {(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\n//Determine Winner Function\r\nfunction calcWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  \r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n"],"sourceRoot":""}